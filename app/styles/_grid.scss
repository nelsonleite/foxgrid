// =======================
// container
// =======================
.container {
    @each $breakpoint, $val in $breakpoints {
        @if $val == '' {
            @include calc-column-gutter('padding', $breakpoint, $divisible: false);
        }
        @else {
            @media (min-width: #{$val}) {
                @include calc-column-gutter('padding', $breakpoint, $divisible: false);
            }
        }
    }
}

// =======================
// wrapper for columns
// =======================
.row {
    @include grid-row();

    // gutter margins
    &:not(.no-gutter) {
        @include grid-row-gutter-margins();
    }

    //
    // directions
    //
    &.horizontal {
        flex-direction: row;
    }

    &.reverse {
        flex-direction: row-reverse;
    }

    &.vertical {
        flex-direction: column;
    }

    &.vertical-reverse {
        flex-direction: column-reverse;
    }

    //
    // gutter modifications
    //
    &.no-gutter-row,
    &.no-gutter {
        margin-right: 0;
        margin-left: 0;
    }
}

// =======================
// columns
// =======================
$list: '';

@each $breakpoint, $val in $breakpoints {
    @if $val == '' {
        $list: append($list, '.col-auto,', comma);

        @for $i from 1 through $grid-columns {
            $list: append($list, '.col-#{$i},', comma);
        }
    }

    @for $i from 1 through $grid-columns {
        $list: append($list, '.col-#{$breakpoint}-#{$i},', comma);
    }
    $list: append($list, '.col-#{$breakpoint}-auto,', comma);
}

$list: remove-nth($list, 1);

//
// common styles
//
#{$list} {
    @include make-grid-columns();

    // remove gutter
    .row.no-gutter > & {
        padding-right: 0;
        padding-left: 0;
    }
}

//
// grid for each screen breakpoint
//
@each $breakpoint, $val in $breakpoints {
    @if $val == '' {
        @include loop-breakpoints($breakpoint);
    }
    @else {
        @media (min-width: #{$val}) {
            @include loop-breakpoints($breakpoint);
        }
    }
}
